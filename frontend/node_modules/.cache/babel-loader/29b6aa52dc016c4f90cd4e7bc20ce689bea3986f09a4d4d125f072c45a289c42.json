{"ast":null,"code":"var _jsxFileName = \"/Users/Joshua/Coding/Project_CO_KPIs/frontend/src/components/TestComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Client } from '@stomp/stompjs';\nimport { Button, TextField, Paper, Typography, Box } from '@mui/material';\nimport SockJS from 'sockjs-client';\n\n// Define the interface for our test data\n\n// Define the interface for our Instagram post data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestComponent = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [message, setMessage] = useState('');\n  const [stompClient, setStompClient] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  useEffect(() => {\n    // Create SockJS instance\n    const socket = new SockJS('http://localhost:8080/ws/kpi');\n\n    // Create STOMP client\n    const client = new Client({\n      webSocketFactory: () => socket,\n      onConnect: () => {\n        console.log('Connected to WebSocket');\n        setIsConnected(true);\n        client.subscribe('/topic/kpi-updates', message => {\n          try {\n            const newData = JSON.parse(message.body);\n            setData(newData);\n          } catch (error) {\n            console.error('Error parsing message:', error);\n          }\n        });\n      },\n      onDisconnect: () => {\n        console.log('Disconnected from WebSocket');\n        setIsConnected(false);\n      },\n      onStompError: frame => {\n        console.error('STOMP error:', frame);\n      }\n    });\n\n    // Activate the client\n    client.activate();\n    setStompClient(client);\n\n    // Cleanup on unmount\n    return () => {\n      if (client.connected) {\n        client.deactivate();\n      }\n    };\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/instagram/posts');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const newData = await response.json();\n      setData(newData);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const sendMessage = async () => {\n    if (!stompClient || !message) return;\n    try {\n      await fetch('http://localhost:8080/api/instagram/refresh', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message\n        })\n      });\n      setMessage('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Instagram KPI Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        gutterBottom: true,\n        children: [\"WebSocket Status: \", isConnected ? 'Connected' : 'Disconnected']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: fetchData,\n        sx: {\n          mb: 2\n        },\n        disabled: !isConnected,\n        children: \"Fetch Latest Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), data && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Post Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Caption: \", data.caption]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Posted At: \", new Date(data.postedAt).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Likes: \", data.likes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Comments: \", data.comments]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Reach: \", data.reach]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Impressions: \", data.impressions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Manual Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Enter message (optional)\",\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: sendMessage,\n        disabled: !isConnected,\n        children: \"Refresh Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n_s(TestComponent, \"HObLizlDWixchL5Di+tGr+WIzjg=\");\n_c = TestComponent;\nexport default TestComponent;\nvar _c;\n$RefreshReg$(_c, \"TestComponent\");","map":{"version":3,"names":["React","useEffect","useState","Client","Button","TextField","Paper","Typography","Box","SockJS","jsxDEV","_jsxDEV","TestComponent","_s","data","setData","message","setMessage","stompClient","setStompClient","isConnected","setIsConnected","socket","client","webSocketFactory","onConnect","console","log","subscribe","newData","JSON","parse","body","error","onDisconnect","onStompError","frame","activate","connected","deactivate","fetchData","response","fetch","ok","Error","status","json","sendMessage","method","headers","stringify","sx","p","children","mb","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","disabled","mt","caption","Date","postedAt","toLocaleString","likes","comments","reach","impressions","fullWidth","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/Joshua/Coding/Project_CO_KPIs/frontend/src/components/TestComponent.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Client } from '@stomp/stompjs';\nimport { Button, TextField, Paper, Typography, Box } from '@mui/material';\nimport SockJS from 'sockjs-client';\n\n// Define the interface for our test data\ninterface TestData {\n    message: string;\n    count: number;\n    timestamp: number;\n}\n\n// Define the interface for our Instagram post data\ninterface InstagramPost {\n    id: number;\n    postId: string;\n    caption: string;\n    postedAt: string;\n    likes: number;\n    comments: number;\n    shares: number;\n    saves: number;\n    reach: number;\n    impressions: number;\n    createdAt: string;\n    updatedAt: string;\n}\n\nconst TestComponent: React.FC = () => {\n    const [data, setData] = useState<InstagramPost | null>(null);\n    const [message, setMessage] = useState<string>('');\n    const [stompClient, setStompClient] = useState<Client | null>(null);\n    const [isConnected, setIsConnected] = useState<boolean>(false);\n\n    useEffect(() => {\n        // Create SockJS instance\n        const socket = new SockJS('http://localhost:8080/ws/kpi');\n\n        // Create STOMP client\n        const client = new Client({\n            webSocketFactory: () => socket,\n            onConnect: () => {\n                console.log('Connected to WebSocket');\n                setIsConnected(true);\n                client.subscribe('/topic/kpi-updates', (message) => {\n                    try {\n                        const newData = JSON.parse(message.body) as InstagramPost;\n                        setData(newData);\n                    } catch (error) {\n                        console.error('Error parsing message:', error);\n                    }\n                });\n            },\n            onDisconnect: () => {\n                console.log('Disconnected from WebSocket');\n                setIsConnected(false);\n            },\n            onStompError: (frame) => {\n                console.error('STOMP error:', frame);\n            }\n        });\n\n        // Activate the client\n        client.activate();\n        setStompClient(client);\n\n        // Cleanup on unmount\n        return () => {\n            if (client.connected) {\n                client.deactivate();\n            }\n        };\n    }, []);\n\n    const fetchData = async (): Promise<void> => {\n        try {\n            const response = await fetch('http://localhost:8080/api/instagram/posts');\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const newData = await response.json() as InstagramPost;\n            setData(newData);\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    };\n\n    const sendMessage = async (): Promise<void> => {\n        if (!stompClient || !message) return;\n\n        try {\n            await fetch('http://localhost:8080/api/instagram/refresh', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ message }),\n            });\n            setMessage('');\n        } catch (error) {\n            console.error('Error sending message:', error);\n        }\n    };\n\n    return (\n        <Box sx={{ p: 3 }}>\n            <Paper sx={{ p: 3, mb: 3 }}>\n                <Typography variant=\"h5\" gutterBottom>\n                    Instagram KPI Dashboard\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                    WebSocket Status: {isConnected ? 'Connected' : 'Disconnected'}\n                </Typography>\n                <Button \n                    variant=\"contained\" \n                    onClick={fetchData} \n                    sx={{ mb: 2 }}\n                    disabled={!isConnected}\n                >\n                    Fetch Latest Data\n                </Button>\n                {data && (\n                    <Box sx={{ mt: 2 }}>\n                        <Typography variant=\"h6\">Post Details</Typography>\n                        <Typography>Caption: {data.caption}</Typography>\n                        <Typography>Posted At: {new Date(data.postedAt).toLocaleString()}</Typography>\n                        <Typography>Likes: {data.likes}</Typography>\n                        <Typography>Comments: {data.comments}</Typography>\n                        <Typography>Reach: {data.reach}</Typography>\n                        <Typography>Impressions: {data.impressions}</Typography>\n                    </Box>\n                )}\n            </Paper>\n\n            <Paper sx={{ p: 3 }}>\n                <Typography variant=\"h6\" gutterBottom>\n                    Manual Refresh\n                </Typography>\n                <TextField\n                    fullWidth\n                    value={message}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => setMessage(e.target.value)}\n                    placeholder=\"Enter message (optional)\"\n                    sx={{ mb: 2 }}\n                />\n                <Button\n                    variant=\"contained\"\n                    onClick={sendMessage}\n                    disabled={!isConnected}\n                >\n                    Refresh Data\n                </Button>\n            </Paper>\n        </Box>\n    );\n};\n\nexport default TestComponent; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}