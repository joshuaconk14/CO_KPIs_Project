{"ast":null,"code":"var _jsxFileName = \"/Users/Joshua/Coding/Project_CO_KPIs/frontend/src/components/TestComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Client } from '@stomp/stompjs';\nimport { Button, Paper, Typography, Box, Grid } from '@mui/material';\nimport SockJS from 'sockjs-client';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid, Legend } from 'recharts';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\n\n// Define the interface for our test data\n\n// Define the interface for our Instagram post data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst kpiOptions = [{\n  value: 'likes',\n  label: 'Likes'\n}, {\n  value: 'comments',\n  label: 'Comments'\n}, {\n  value: 'shares',\n  label: 'Shares'\n}, {\n  value: 'saves',\n  label: 'Saves'\n}, {\n  value: 'reach',\n  label: 'Reach'\n}, {\n  value: 'impressions',\n  label: 'Impressions'\n}];\nconst TestComponent = () => {\n  _s();\n  var _kpiOptions$find;\n  const [posts, setPosts] = useState([]);\n  const [selectedPost, setSelectedPost] = useState(null);\n  const [stompClient, setStompClient] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [selectedKPI, setSelectedKPI] = useState('likes');\n  useEffect(() => {\n    const socket = new SockJS('http://localhost:8080/ws/kpi');\n    const client = new Client({\n      webSocketFactory: () => socket,\n      onConnect: () => {\n        console.log('Connected to WebSocket');\n        setIsConnected(true);\n        client.subscribe('/topic/kpi-updates', message => {\n          try {\n            const newData = JSON.parse(message.body);\n            setSelectedPost(newData);\n          } catch (error) {\n            console.error('Error parsing message:', error);\n          }\n        });\n      },\n      onDisconnect: () => {\n        console.log('Disconnected from WebSocket');\n        setIsConnected(false);\n      },\n      onStompError: frame => {\n        console.error('STOMP error:', frame);\n      }\n    });\n    client.activate();\n    setStompClient(client);\n    return () => {\n      if (client.connected) {\n        client.deactivate();\n      }\n    };\n  }, []);\n  const fetchPosts = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/instagram/posts');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setPosts(data);\n      console.log('Success! Posts fetched');\n      if (data.length > 0) {\n        setSelectedPost(data[0]);\n      }\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n  const refreshPosts = async () => {\n    try {\n      await fetch('http://localhost:8080/api/instagram/refresh', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    } catch (error) {\n      console.error('Error refreshing posts:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Instagram Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: fetchPosts,\n            sx: {\n              mb: 2,\n              mr: 2\n            },\n            children: \"Fetch Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: refreshPosts,\n            sx: {\n              mb: 2\n            },\n            disabled: !isConnected,\n            children: \"Refresh Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), selectedPost && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              children: \"Selected Post Details:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Caption: \", selectedPost.caption]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Posted At: \", new Date(selectedPost.postedAt).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Likes: \", selectedPost.likes]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Comments: \", selectedPost.comments]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Reach: \", selectedPost.reach]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Impressions: \", selectedPost.impressions]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this), posts.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              children: \"KPI Bar Chart:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  mr: 2\n                },\n                children: \"Select KPI:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: selectedKPI,\n                onChange: e => setSelectedKPI(e.target.value),\n                size: \"small\",\n                children: kpiOptions.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: 350,\n              children: /*#__PURE__*/_jsxDEV(BarChart, {\n                data: posts,\n                margin: {\n                  top: 20,\n                  right: 30,\n                  left: 0,\n                  bottom: 40\n                },\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"postedAt\",\n                  tickFormatter: date => new Date(date).toLocaleDateString(),\n                  angle: -30,\n                  textAnchor: \"end\",\n                  height: 60\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  content: ({\n                    active,\n                    payload\n                  }) => {\n                    if (active && payload && payload.length) {\n                      const post = payload[0].payload;\n                      return /*#__PURE__*/_jsxDEV(Paper, {\n                        sx: {\n                          p: 2\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"subtitle2\",\n                          children: [post.caption.substring(0, 60), \"...\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 182,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          children: [\"Posted At: \", new Date(post.postedAt).toLocaleString()]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 183,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          children: [\"Likes: \", post.likes]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 184,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          children: [\"Comments: \", post.comments]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 185,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          children: [\"Shares: \", post.shares]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 186,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          children: [\"Saves: \", post.saves]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 187,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          children: [\"Reach: \", post.reach]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 188,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          children: [\"Impressions: \", post.impressions]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 189,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 181,\n                        columnNumber: 57\n                      }, this);\n                    }\n                    return null;\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                  dataKey: selectedKPI,\n                  fill: \"#1976d2\",\n                  name: (_kpiOptions$find = kpiOptions.find(opt => opt.value === selectedKPI)) === null || _kpiOptions$find === void 0 ? void 0 : _kpiOptions$find.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"WebSocket Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            gutterBottom: true,\n            children: [\"Connection Status: \", isConnected ? 'Connected' : 'Disconnected']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n_s(TestComponent, \"1w9i4TUiI33Lr7RWJfEnL2VBhFE=\");\n_c = TestComponent;\nexport default TestComponent;\nvar _c;\n$RefreshReg$(_c, \"TestComponent\");","map":{"version":3,"names":["React","useEffect","useState","Client","Button","Paper","Typography","Box","Grid","SockJS","BarChart","Bar","XAxis","YAxis","Tooltip","ResponsiveContainer","CartesianGrid","Legend","Select","MenuItem","jsxDEV","_jsxDEV","kpiOptions","value","label","TestComponent","_s","_kpiOptions$find","posts","setPosts","selectedPost","setSelectedPost","stompClient","setStompClient","isConnected","setIsConnected","selectedKPI","setSelectedKPI","socket","client","webSocketFactory","onConnect","console","log","subscribe","message","newData","JSON","parse","body","error","onDisconnect","onStompError","frame","activate","connected","deactivate","fetchPosts","response","fetch","ok","Error","status","data","json","length","refreshPosts","method","headers","sx","p","children","container","spacing","item","xs","md","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","mb","mr","disabled","mt","caption","Date","postedAt","toLocaleString","likes","comments","reach","impressions","display","alignItems","onChange","e","target","size","map","option","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","tickFormatter","date","toLocaleDateString","angle","textAnchor","content","active","payload","post","substring","shares","saves","fill","name","find","opt","color","_c","$RefreshReg$"],"sources":["/Users/Joshua/Coding/Project_CO_KPIs/frontend/src/components/TestComponent.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Client } from '@stomp/stompjs';\nimport { Button, TextField, Paper, Typography, Box, Grid } from '@mui/material';\nimport SockJS from 'sockjs-client';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid, Legend } from 'recharts';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\n\n// Define the interface for our test data\ninterface TestData {\n    message: string;\n    count: number;\n    timestamp: string;\n}\n\n// Define the interface for our Instagram post data\ninterface InstagramPost {\n    id: number;\n    postId: string;\n    caption: string;\n    postedAt: string;\n    likes: number;\n    comments: number;\n    shares: number;\n    saves: number;\n    reach: number;\n    impressions: number;\n    createdAt: string;\n    updatedAt: string;\n}\n\nconst kpiOptions = [\n    { value: 'likes', label: 'Likes' },\n    { value: 'comments', label: 'Comments' },\n    { value: 'shares', label: 'Shares' },\n    { value: 'saves', label: 'Saves' },\n    { value: 'reach', label: 'Reach' },\n    { value: 'impressions', label: 'Impressions' },\n];\n\nconst TestComponent: React.FC = () => {\n    const [posts, setPosts] = useState<InstagramPost[]>([]);\n    const [selectedPost, setSelectedPost] = useState<InstagramPost | null>(null);\n    const [stompClient, setStompClient] = useState<Client | null>(null);\n    const [isConnected, setIsConnected] = useState<boolean>(false);\n    const [selectedKPI, setSelectedKPI] = useState<string>('likes');\n\n    useEffect(() => {\n        const socket = new SockJS('http://localhost:8080/ws/kpi');\n        const client = new Client({\n            webSocketFactory: () => socket,\n            onConnect: () => {\n                console.log('Connected to WebSocket');\n                setIsConnected(true);\n                client.subscribe('/topic/kpi-updates', (message) => {\n                    try {\n                        const newData = JSON.parse(message.body) as InstagramPost;\n                        setSelectedPost(newData);\n                    } catch (error) {\n                        console.error('Error parsing message:', error);\n                    }\n                });\n            },\n            onDisconnect: () => {\n                console.log('Disconnected from WebSocket');\n                setIsConnected(false);\n            },\n            onStompError: (frame) => {\n                console.error('STOMP error:', frame);\n            }\n        });\n\n        client.activate();\n        setStompClient(client);\n\n        return () => {\n            if (client.connected) {\n                client.deactivate();\n            }\n        };\n    }, []);\n\n    const fetchPosts = async (): Promise<void> => {\n        try {\n            const response = await fetch('http://localhost:8080/api/instagram/posts');\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n            setPosts(data);\n            console.log('Success! Posts fetched');\n            if (data.length > 0) {\n                setSelectedPost(data[0]);\n            }\n        } catch (error) {\n            console.error('Error fetching posts:', error);\n        }\n    };\n\n    const refreshPosts = async (): Promise<void> => {\n        try {\n            await fetch('http://localhost:8080/api/instagram/refresh', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                }\n            });\n        } catch (error) {\n            console.error('Error refreshing posts:', error);\n        }\n    };\n\n    return (\n        <Box sx={{ p: 3 }}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} md={6}>\n                    <Paper sx={{ p: 3 }}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            Instagram Posts\n                        </Typography>\n                        <Button \n                            variant=\"contained\" \n                            onClick={fetchPosts} \n                            sx={{ mb: 2, mr: 2 }}\n                        >\n                            Fetch Posts\n                        </Button>\n                        <Button \n                            variant=\"contained\" \n                            onClick={refreshPosts} \n                            sx={{ mb: 2 }}\n                            disabled={!isConnected}\n                        >\n                            Refresh Posts\n                        </Button>\n                        {selectedPost && (\n                            <Box sx={{ mt: 2 }}>\n                                <Typography variant=\"subtitle1\">Selected Post Details:</Typography>\n                                <Typography>Caption: {selectedPost.caption}</Typography>\n                                <Typography>Posted At: {new Date(selectedPost.postedAt).toLocaleString()}</Typography>\n                                <Typography>Likes: {selectedPost.likes}</Typography>\n                                <Typography>Comments: {selectedPost.comments}</Typography>\n                                <Typography>Reach: {selectedPost.reach}</Typography>\n                                <Typography>Impressions: {selectedPost.impressions}</Typography>\n                            </Box>\n                        )}\n                        {posts.length > 0 && (\n                            <Box sx={{ mt: 2 }}>\n                                <Typography variant=\"subtitle1\">KPI Bar Chart:</Typography>\n                                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                                    <Typography sx={{ mr: 2 }}>Select KPI:</Typography>\n                                    <Select\n                                        value={selectedKPI}\n                                        onChange={(e) => setSelectedKPI(e.target.value as string)}\n                                        size=\"small\"\n                                    >\n                                        {kpiOptions.map((option) => (\n                                            <MenuItem key={option.value} value={option.value}>{option.label}</MenuItem>\n                                        ))}\n                                    </Select>\n                                </Box>\n                                <ResponsiveContainer width=\"100%\" height={350}>\n                                    <BarChart\n                                        data={posts}\n                                        margin={{ top: 20, right: 30, left: 0, bottom: 40 }}\n                                    >\n                                        <CartesianGrid strokeDasharray=\"3 3\" />\n                                        <XAxis \n                                            dataKey=\"postedAt\"\n                                            tickFormatter={(date) => new Date(date).toLocaleDateString()}\n                                            angle={-30}\n                                            textAnchor=\"end\"\n                                            height={60}\n                                        />\n                                        <YAxis />\n                                        <Tooltip \n                                            content={({ active, payload }) => {\n                                                if (active && payload && payload.length) {\n                                                    const post = payload[0].payload;\n                                                    return (\n                                                        <Paper sx={{ p: 2 }}>\n                                                            <Typography variant=\"subtitle2\">{post.caption.substring(0, 60)}...</Typography>\n                                                            <Typography variant=\"body2\">Posted At: {new Date(post.postedAt).toLocaleString()}</Typography>\n                                                            <Typography variant=\"body2\">Likes: {post.likes}</Typography>\n                                                            <Typography variant=\"body2\">Comments: {post.comments}</Typography>\n                                                            <Typography variant=\"body2\">Shares: {post.shares}</Typography>\n                                                            <Typography variant=\"body2\">Saves: {post.saves}</Typography>\n                                                            <Typography variant=\"body2\">Reach: {post.reach}</Typography>\n                                                            <Typography variant=\"body2\">Impressions: {post.impressions}</Typography>\n                                                        </Paper>\n                                                    );\n                                                }\n                                                return null;\n                                            }}\n                                        />\n                                        <Legend />\n                                        <Bar dataKey={selectedKPI} fill=\"#1976d2\" name={kpiOptions.find(opt => opt.value === selectedKPI)?.label} />\n                                    </BarChart>\n                                </ResponsiveContainer>\n                            </Box>\n                        )}\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                    <Paper sx={{ p: 3 }}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            WebSocket Status\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                            Connection Status: {isConnected ? 'Connected' : 'Disconnected'}\n                        </Typography>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n};\n\nexport default TestComponent; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,gBAAgB;AACvC,SAASC,MAAM,EAAaC,KAAK,EAAEC,UAAU,EAAEC,GAAG,EAAEC,IAAI,QAAQ,eAAe;AAC/E,OAAOC,MAAM,MAAM,eAAe;AAClC,SAASC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,mBAAmB,EAAEC,aAAa,EAAEC,MAAM,QAAQ,UAAU;AAC3G,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,QAAQ,MAAM,wBAAwB;;AAE7C;;AAOA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAgBA,MAAMC,UAAU,GAAG,CACf;EAAEC,KAAK,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAQ,CAAC,EAClC;EAAED,KAAK,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAW,CAAC,EACxC;EAAED,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAS,CAAC,EACpC;EAAED,KAAK,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAQ,CAAC,EAClC;EAAED,KAAK,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAQ,CAAC,EAClC;EAAED,KAAK,EAAE,aAAa;EAAEC,KAAK,EAAE;AAAc,CAAC,CACjD;AAED,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,gBAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAAkB,EAAE,CAAC;EACvD,MAAM,CAAC4B,YAAY,EAAEC,eAAe,CAAC,GAAG7B,QAAQ,CAAuB,IAAI,CAAC;EAC5E,MAAM,CAAC8B,WAAW,EAAEC,cAAc,CAAC,GAAG/B,QAAQ,CAAgB,IAAI,CAAC;EACnE,MAAM,CAACgC,WAAW,EAAEC,cAAc,CAAC,GAAGjC,QAAQ,CAAU,KAAK,CAAC;EAC9D,MAAM,CAACkC,WAAW,EAAEC,cAAc,CAAC,GAAGnC,QAAQ,CAAS,OAAO,CAAC;EAE/DD,SAAS,CAAC,MAAM;IACZ,MAAMqC,MAAM,GAAG,IAAI7B,MAAM,CAAC,8BAA8B,CAAC;IACzD,MAAM8B,MAAM,GAAG,IAAIpC,MAAM,CAAC;MACtBqC,gBAAgB,EAAEA,CAAA,KAAMF,MAAM;MAC9BG,SAAS,EAAEA,CAAA,KAAM;QACbC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACrCR,cAAc,CAAC,IAAI,CAAC;QACpBI,MAAM,CAACK,SAAS,CAAC,oBAAoB,EAAGC,OAAO,IAAK;UAChD,IAAI;YACA,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,IAAI,CAAkB;YACzDlB,eAAe,CAACe,OAAO,CAAC;UAC5B,CAAC,CAAC,OAAOI,KAAK,EAAE;YACZR,OAAO,CAACQ,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;UAClD;QACJ,CAAC,CAAC;MACN,CAAC;MACDC,YAAY,EAAEA,CAAA,KAAM;QAChBT,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC1CR,cAAc,CAAC,KAAK,CAAC;MACzB,CAAC;MACDiB,YAAY,EAAGC,KAAK,IAAK;QACrBX,OAAO,CAACQ,KAAK,CAAC,cAAc,EAAEG,KAAK,CAAC;MACxC;IACJ,CAAC,CAAC;IAEFd,MAAM,CAACe,QAAQ,CAAC,CAAC;IACjBrB,cAAc,CAACM,MAAM,CAAC;IAEtB,OAAO,MAAM;MACT,IAAIA,MAAM,CAACgB,SAAS,EAAE;QAClBhB,MAAM,CAACiB,UAAU,CAAC,CAAC;MACvB;IACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAA2B;IAC1C,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,CAAC;MACzE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC7D;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCnC,QAAQ,CAACkC,IAAI,CAAC;MACdrB,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrC,IAAIoB,IAAI,CAACE,MAAM,GAAG,CAAC,EAAE;QACjBlC,eAAe,CAACgC,IAAI,CAAC,CAAC,CAAC,CAAC;MAC5B;IACJ,CAAC,CAAC,OAAOb,KAAK,EAAE;MACZR,OAAO,CAACQ,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAED,MAAMgB,YAAY,GAAG,MAAAA,CAAA,KAA2B;IAC5C,IAAI;MACA,MAAMP,KAAK,CAAC,6CAA6C,EAAE;QACvDQ,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;IACN,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACZR,OAAO,CAACQ,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD;EACJ,CAAC;EAED,oBACI7B,OAAA,CAACd,GAAG;IAAC8D,EAAE,EAAE;MAAEC,CAAC,EAAE;IAAE,CAAE;IAAAC,QAAA,eACdlD,OAAA,CAACb,IAAI;MAACgE,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAF,QAAA,gBACvBlD,OAAA,CAACb,IAAI;QAACkE,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAL,QAAA,eACrBlD,OAAA,CAAChB,KAAK;UAACgE,EAAE,EAAE;YAAEC,CAAC,EAAE;UAAE,CAAE;UAAAC,QAAA,gBAChBlD,OAAA,CAACf,UAAU;YAACuE,OAAO,EAAC,IAAI;YAACC,YAAY;YAAAP,QAAA,EAAC;UAEtC;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACb7D,OAAA,CAACjB,MAAM;YACHyE,OAAO,EAAC,WAAW;YACnBM,OAAO,EAAE1B,UAAW;YACpBY,EAAE,EAAE;cAAEe,EAAE,EAAE,CAAC;cAAEC,EAAE,EAAE;YAAE,CAAE;YAAAd,QAAA,EACxB;UAED;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT7D,OAAA,CAACjB,MAAM;YACHyE,OAAO,EAAC,WAAW;YACnBM,OAAO,EAAEjB,YAAa;YACtBG,EAAE,EAAE;cAAEe,EAAE,EAAE;YAAE,CAAE;YACdE,QAAQ,EAAE,CAACpD,WAAY;YAAAqC,QAAA,EAC1B;UAED;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACRpD,YAAY,iBACTT,OAAA,CAACd,GAAG;YAAC8D,EAAE,EAAE;cAAEkB,EAAE,EAAE;YAAE,CAAE;YAAAhB,QAAA,gBACflD,OAAA,CAACf,UAAU;cAACuE,OAAO,EAAC,WAAW;cAAAN,QAAA,EAAC;YAAsB;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACnE7D,OAAA,CAACf,UAAU;cAAAiE,QAAA,GAAC,WAAS,EAACzC,YAAY,CAAC0D,OAAO;YAAA;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC,eACxD7D,OAAA,CAACf,UAAU;cAAAiE,QAAA,GAAC,aAAW,EAAC,IAAIkB,IAAI,CAAC3D,YAAY,CAAC4D,QAAQ,CAAC,CAACC,cAAc,CAAC,CAAC;YAAA;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC,eACtF7D,OAAA,CAACf,UAAU;cAAAiE,QAAA,GAAC,SAAO,EAACzC,YAAY,CAAC8D,KAAK;YAAA;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC,eACpD7D,OAAA,CAACf,UAAU;cAAAiE,QAAA,GAAC,YAAU,EAACzC,YAAY,CAAC+D,QAAQ;YAAA;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC,eAC1D7D,OAAA,CAACf,UAAU;cAAAiE,QAAA,GAAC,SAAO,EAACzC,YAAY,CAACgE,KAAK;YAAA;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC,eACpD7D,OAAA,CAACf,UAAU;cAAAiE,QAAA,GAAC,eAAa,EAACzC,YAAY,CAACiE,WAAW;YAAA;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/D,CACR,EACAtD,KAAK,CAACqC,MAAM,GAAG,CAAC,iBACb5C,OAAA,CAACd,GAAG;YAAC8D,EAAE,EAAE;cAAEkB,EAAE,EAAE;YAAE,CAAE;YAAAhB,QAAA,gBACflD,OAAA,CAACf,UAAU;cAACuE,OAAO,EAAC,WAAW;cAAAN,QAAA,EAAC;YAAc;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC3D7D,OAAA,CAACd,GAAG;cAAC8D,EAAE,EAAE;gBAAE2B,OAAO,EAAE,MAAM;gBAAEC,UAAU,EAAE,QAAQ;gBAAEb,EAAE,EAAE;cAAE,CAAE;cAAAb,QAAA,gBACtDlD,OAAA,CAACf,UAAU;gBAAC+D,EAAE,EAAE;kBAAEgB,EAAE,EAAE;gBAAE,CAAE;gBAAAd,QAAA,EAAC;cAAW;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACnD7D,OAAA,CAACH,MAAM;gBACHK,KAAK,EAAEa,WAAY;gBACnB8D,QAAQ,EAAGC,CAAC,IAAK9D,cAAc,CAAC8D,CAAC,CAACC,MAAM,CAAC7E,KAAe,CAAE;gBAC1D8E,IAAI,EAAC,OAAO;gBAAA9B,QAAA,EAEXjD,UAAU,CAACgF,GAAG,CAAEC,MAAM,iBACnBlF,OAAA,CAACF,QAAQ;kBAAoBI,KAAK,EAAEgF,MAAM,CAAChF,KAAM;kBAAAgD,QAAA,EAAEgC,MAAM,CAAC/E;gBAAK,GAAhD+E,MAAM,CAAChF,KAAK;kBAAAwD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAA+C,CAC7E;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC,eACN7D,OAAA,CAACN,mBAAmB;cAACyF,KAAK,EAAC,MAAM;cAACC,MAAM,EAAE,GAAI;cAAAlC,QAAA,eAC1ClD,OAAA,CAACX,QAAQ;gBACLqD,IAAI,EAAEnC,KAAM;gBACZ8E,MAAM,EAAE;kBAAEC,GAAG,EAAE,EAAE;kBAAEC,KAAK,EAAE,EAAE;kBAAEC,IAAI,EAAE,CAAC;kBAAEC,MAAM,EAAE;gBAAG,CAAE;gBAAAvC,QAAA,gBAEpDlD,OAAA,CAACL,aAAa;kBAAC+F,eAAe,EAAC;gBAAK;kBAAAhC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACvC7D,OAAA,CAACT,KAAK;kBACFoG,OAAO,EAAC,UAAU;kBAClBC,aAAa,EAAGC,IAAI,IAAK,IAAIzB,IAAI,CAACyB,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAE;kBAC7DC,KAAK,EAAE,CAAC,EAAG;kBACXC,UAAU,EAAC,KAAK;kBAChBZ,MAAM,EAAE;gBAAG;kBAAA1B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACd,CAAC,eACF7D,OAAA,CAACR,KAAK;kBAAAkE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACT7D,OAAA,CAACP,OAAO;kBACJwG,OAAO,EAAEA,CAAC;oBAAEC,MAAM;oBAAEC;kBAAQ,CAAC,KAAK;oBAC9B,IAAID,MAAM,IAAIC,OAAO,IAAIA,OAAO,CAACvD,MAAM,EAAE;sBACrC,MAAMwD,IAAI,GAAGD,OAAO,CAAC,CAAC,CAAC,CAACA,OAAO;sBAC/B,oBACInG,OAAA,CAAChB,KAAK;wBAACgE,EAAE,EAAE;0BAAEC,CAAC,EAAE;wBAAE,CAAE;wBAAAC,QAAA,gBAChBlD,OAAA,CAACf,UAAU;0BAACuE,OAAO,EAAC,WAAW;0BAAAN,QAAA,GAAEkD,IAAI,CAACjC,OAAO,CAACkC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,EAAC,KAAG;wBAAA;0BAAA3C,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAY,CAAC,eAC/E7D,OAAA,CAACf,UAAU;0BAACuE,OAAO,EAAC,OAAO;0BAAAN,QAAA,GAAC,aAAW,EAAC,IAAIkB,IAAI,CAACgC,IAAI,CAAC/B,QAAQ,CAAC,CAACC,cAAc,CAAC,CAAC;wBAAA;0BAAAZ,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAa,CAAC,eAC9F7D,OAAA,CAACf,UAAU;0BAACuE,OAAO,EAAC,OAAO;0BAAAN,QAAA,GAAC,SAAO,EAACkD,IAAI,CAAC7B,KAAK;wBAAA;0BAAAb,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAa,CAAC,eAC5D7D,OAAA,CAACf,UAAU;0BAACuE,OAAO,EAAC,OAAO;0BAAAN,QAAA,GAAC,YAAU,EAACkD,IAAI,CAAC5B,QAAQ;wBAAA;0BAAAd,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAa,CAAC,eAClE7D,OAAA,CAACf,UAAU;0BAACuE,OAAO,EAAC,OAAO;0BAAAN,QAAA,GAAC,UAAQ,EAACkD,IAAI,CAACE,MAAM;wBAAA;0BAAA5C,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAa,CAAC,eAC9D7D,OAAA,CAACf,UAAU;0BAACuE,OAAO,EAAC,OAAO;0BAAAN,QAAA,GAAC,SAAO,EAACkD,IAAI,CAACG,KAAK;wBAAA;0BAAA7C,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAa,CAAC,eAC5D7D,OAAA,CAACf,UAAU;0BAACuE,OAAO,EAAC,OAAO;0BAAAN,QAAA,GAAC,SAAO,EAACkD,IAAI,CAAC3B,KAAK;wBAAA;0BAAAf,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAa,CAAC,eAC5D7D,OAAA,CAACf,UAAU;0BAACuE,OAAO,EAAC,OAAO;0BAAAN,QAAA,GAAC,eAAa,EAACkD,IAAI,CAAC1B,WAAW;wBAAA;0BAAAhB,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAa,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACrE,CAAC;oBAEhB;oBACA,OAAO,IAAI;kBACf;gBAAE;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL,CAAC,eACF7D,OAAA,CAACJ,MAAM;kBAAA8D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACV7D,OAAA,CAACV,GAAG;kBAACqG,OAAO,EAAE5E,WAAY;kBAACyF,IAAI,EAAC,SAAS;kBAACC,IAAI,GAAAnG,gBAAA,GAAEL,UAAU,CAACyG,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACzG,KAAK,KAAKa,WAAW,CAAC,cAAAT,gBAAA,uBAAjDA,gBAAA,CAAmDH;gBAAM;kBAAAuD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtG;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB,CACR;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAEP7D,OAAA,CAACb,IAAI;QAACkE,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAL,QAAA,eACrBlD,OAAA,CAAChB,KAAK;UAACgE,EAAE,EAAE;YAAEC,CAAC,EAAE;UAAE,CAAE;UAAAC,QAAA,gBAChBlD,OAAA,CAACf,UAAU;YAACuE,OAAO,EAAC,IAAI;YAACC,YAAY;YAAAP,QAAA,EAAC;UAEtC;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACb7D,OAAA,CAACf,UAAU;YAACuE,OAAO,EAAC,OAAO;YAACoD,KAAK,EAAC,gBAAgB;YAACnD,YAAY;YAAAP,QAAA,GAAC,qBACzC,EAACrC,WAAW,GAAG,WAAW,GAAG,cAAc;UAAA;YAAA6C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACxD,EAAA,CAjLID,aAAuB;AAAAyG,EAAA,GAAvBzG,aAAuB;AAmL7B,eAAeA,aAAa;AAAC,IAAAyG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}